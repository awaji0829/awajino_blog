{"version":3,"file":"component---src-pages-index-tsx-03a666fa567570b297ab.js","mappings":"+NAqFA,UA9EkB,SAAC,GAAuB,MAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENC,EAAAA,cAACC,EAAAA,EAAD,CAAQV,SAAUA,EAAUI,MAAOH,GACjCQ,EAAAA,cAACE,EAAAA,EAAD,MACAF,EAAAA,cAAAA,IAAAA,KAAAA,8JASJA,EAAAA,cAACC,EAAAA,EAAD,CAAQV,SAAUA,EAAUI,MAAOH,GACjCQ,EAAAA,cAACE,EAAAA,EAAD,MACAF,EAAAA,cAAAA,KAAAA,CAAIG,MAAO,CAAEC,UAAW,SACrBR,EAAMS,KAAI,SAACC,GACV,IAAMX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KAEpD,OACET,EAAAA,cAAAA,KAAAA,CAAIU,IAAKJ,EAAKE,OAAOC,KAAME,UAAU,oBACnCX,EAAAA,cAAAA,UAAAA,CACEG,MAAO,CACLS,OAAQ,GAGVD,UAAU,iBACVE,WAAS,EACTC,SAAS,6BAETd,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACe,EAAAA,KAAD,CAAMC,GAAIV,EAAKE,OAAOC,KAAMQ,SAAS,OACnCjB,EAAAA,cAAAA,OAAAA,CACEiB,SAAS,WACTd,MAAO,CACLe,MAAO,sBAIRvB,KAIPK,EAAAA,cAAAA,QAAAA,CACEG,MAAO,CACLe,MAAO,sBAIRZ,EAAKC,YAAYY,OAGtBnB,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,IAAAA,CACEG,MAAO,CACLe,MAAO,qBAGTE,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,SAE/CN,SAAS,kBA9CpB,KApBT,EAgFO,IAAMO,EAAO,kBAAMxB,EAAAA,cAACyB,EAAAA,EAAD,CAAK9B,MAAM,aAA9B,C","sources":["webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified\n          for the \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug} className=\"post-list-layout\">\n              <article\n                style={{\n                  margin: 0,\n                  // transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n                }}\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span\n                        itemProp=\"headline\"\n                        style={{\n                          color: 'var(--textNormal)',\n                          // transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n                        }}\n                      >\n                        {title}\n                      </span>\n                    </Link>\n                  </h2>\n                  <small\n                    style={{\n                      color: 'var(--textNormal)',\n                      // transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n                    }}\n                  >\n                    {post.frontmatter.date}\n                  </small>\n                </header>\n                <section>\n                  <p\n                    style={{\n                      color: 'var(--textNormal)',\n                      // transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n                    }}\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const Head = () => <Seo title=\"All posts\" />;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { hidden: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","React","Layout","Bio","style","listStyle","map","post","frontmatter","fields","slug","key","className","margin","itemScope","itemType","Link","to","itemProp","color","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}