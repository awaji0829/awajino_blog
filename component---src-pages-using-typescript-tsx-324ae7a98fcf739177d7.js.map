{"version":3,"file":"component---src-pages-using-typescript-tsx-324ae7a98fcf739177d7.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack://gatsby-starter-blog/./node_modules/gatsby-plugin-dark-mode/index.js","webpack://gatsby-starter-blog/./src/components/Toggle.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/defineProperty.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: typeof window !== 'undefined' ? window.__theme : null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/_react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","import React from 'react';\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode';\n\nexport const Toggle = () => {\n  return (\n    <ThemeToggler>\n      {({ theme, toggleTheme }) => (\n        <div\n          className=\"darkmodeBtn\"\n          onClick={(e) => toggleTheme(theme === 'dark' ? 'light' : 'dark')}\n        >\n          {theme === 'dark' ? 'WHITE' : 'DARK'}\n        </div>\n      )}\n    </ThemeToggler>\n  );\n};\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { Toggle } from './Toggle';\ninterface LayoutProps {\n  location: any; // 적절한 타입으로 변경\n  title: string; // 적절한 타입으로 변경\n  children: React.ReactNode; // children 타입 정의\n}\ndeclare const __PATH_PREFIX__: string;\n\nconst Layout: React.FC<LayoutProps> = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  let header;\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <Toggle />{' '}\n      <header\n        className=\"global-header\"\n        style={{\n          backgroundColor: 'var(--bg)',\n          color: 'var(--point)',\n          // transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n        }}\n      >\n        {header}\n      </header>\n      <main>{children}</main>\n      <footer\n        style={{\n          color: 'var(--textNormal)',\n          // transition: \"color 0.2s ease-out, background 0.2s ease-out\",\n        }}\n      >\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"google-site-verification\" content=\"PpF0Q2ZYamo3M5yXIBwlt-R9bIpkmRfXj2w9nzLT1go\" />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nSeo.defaultProps = {\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from 'react';\nimport { PageProps, Link, graphql, HeadFC } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\ntype DataProps = {\n  site: {\n    buildTime: string;\n  };\n};\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path, location }) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your pages, components\n      etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't\n      support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and run{' '}\n      <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{' '}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" description=\"\" />;\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_interopRequireDefault","require","exports","__esModule","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","ThemeToggler","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","default","theme","window","__theme","_proto","prototype","componentDidMount","_this2","__onThemeChange","setState","toggleTheme","__setPreferredTheme","render","createElement","props","children","state","Component","propTypes","func","isRequired","_default","_ThemeToggler","Toggle","React","className","onClick","e","header","location","title","isRootPath","pathname","Link","to","style","backgroundColor","color","Date","getFullYear","href","Seo","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","social","twitter","defaultProps","Head","data","path","Layout","buildTime","module","obj","key","value","Object","defineProperty","enumerable","configurable","writable"],"sourceRoot":""}